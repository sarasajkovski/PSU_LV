ZADATAK 1:
  def total_euro(sati, iznos):
    return sati * iznos

sati = float(input("Radni sati: "))
iznos = float(input("Eura/h: "))
ukupno = total_euro(sati, iznos)

print(f"Ukupno: {ukupno} eura")



ZADATAK2:
  try:
    ocjena = float(input("Unesite ocjenu ( između 0.0 i 1.0): "))

    if 0.0 <= ocjena <= 1.0:
        if ocjena >= 0.9:
            print("A")
        elif ocjena >= 0.8:   
            print("B")
        elif ocjena >= 0.7:
            print("C") 
        elif ocjena >= 0.6:
            print("D")
        elif ocjena < 0.6:
            print("F")         
    else:
        print("Ocjena mora biti između 0.0 i 1.0.")    

except ValueError:
    print("Greška") 


ZADATAK 3:
brojevi = []
while True:
    unos = input("Unesite broj ('Done' za kraj): ")
    if unos.lower() == "done":
        break

    broj = float(unos)
    brojevi.append(broj)

if brojevi:
    print(f"Broj unesenih brojeva: {len(brojevi)}" )
    print(f"Srednja vrijednost: {sum(brojevi) / len(brojevi): }")
    print(f"Minimalna vrijednost: {min(brojevi)}")
    print(f"Maksimalna vrijednost: {max(brojevi)}")
    brojevi.sort()
    print("Sortirana lista:", brojevi)
else:
    print("Greška.")



ZADATAK 4:
def main():
    try:
        ime_datoteke = input("Ime datoteke: ").strip()
        with open(ime_datoteke, 'r') as datoteka:
            ukupno = 0.0
            brLinija = 0
            
            for linija in datoteka:
                if linija.startswith("X-DSPAM-Confidence:"):
                    dio = linija.split(":")[1].strip()
                    try:
                        broj = float(dio)
                        ukupno += broj
                        brLinija += 1
                    except ValueError:
                        continue

            if brLinija > 0:
                prosjek = ukupno / brLinija
                print("Average X-DSPAM-Confidence:", prosjek)
            else:
                print("Ne postoji X-DSPAM-Confidence linija.")

    except FileNotFoundError:
        print("Datoteka nije pronađena.")
        
if __name__ == "__main__":
    main()


ZADATAK 5:
import string
def main():
    try:
        with open("song.txt", "r") as file:
            tekst = file.read()

        tekst = tekst.lower()
        for znak in string.punctuation:
            tekst = tekst.replace(znak, "")

        rijeci = tekst.split()
        rjecnik = {}
        for rijec in rijeci:
            rjecnik[rijec] = rjecnik.get(rijec, 0) + 1

        jednom_rijeci = [rijec for rijec, broj in rjecnik.items() if broj == 1]
        print(f"Broj riječi koje se pojavljuju samo jednom: {len(jednom_rijeci)}")
        print("Riječi:")
        for rijec in jednom_rijeci:
            print(rijec)

    except FileNotFoundError:
        print("Datoteka nije pronađena.")

if __name__ == "__main__":
    main()

ZADATAK 6:
def main():
    try:
        with open("SMSSpamCollection.txt", "r", encoding="utf-8") as file:
            ham_broj_poruka = 0
            ham_ukupno_rijeci = 0
            spam_broj_poruka = 0
            spam_ukupno_rijeci = 0
            spam_zavrsava_usklicnik = 0

            for linija in file:
                linija = linija.strip()
                if not linija:
                    continue  

                if '\t' in linija:
                    tip, poruka = linija.split('\t', 1)
                else:
                    continue 

                broj_rijeci = len(poruka.split())

                if tip.lower() == "ham":
                    ham_broj_poruka += 1
                    ham_ukupno_rijeci += broj_rijeci
                elif tip.lower() == "spam":
                    spam_broj_poruka += 1
                    spam_ukupno_rijeci += broj_rijeci
                    if poruka.strip().endswith("!"):
                        spam_zavrsava_usklicnik += 1

            prosjek_ham = ham_ukupno_rijeci / ham_broj_poruka if ham_broj_poruka else 0
            prosjek_spam = spam_ukupno_rijeci / spam_broj_poruka if spam_broj_poruka else 0
            print(f"(a) Prosječan broj riječi u ham porukama: {prosjek_ham:.2f}")
            print(f"(a) Prosječan broj riječi u spam porukama: {prosjek_spam:.2f}")
            print(f"(b) Broj spam poruka koje završavaju uskličnikom: {spam_zavrsava_usklicnik}")

    except FileNotFoundError:
        print("Datoteka  nije pronađena.")

if __name__ == "__main__":
    main()
