ZADATAK 1:
import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 2, 3, 3, 1])
y = np.array([1, 2, 2, 1, 1])
plt.xlim(0, 4)  
plt.ylim(0, 4)   
plt.plot(x, y, color='g', linewidth = 1, marker = 'o')  

plt.title("Zadatak 1")
plt.xlabel("x os")
plt.ylabel("y os")

plt.show()


ZADATAK 2:
import numpy as np
import matplotlib.pyplot as plt
# a)
data = np.loadtxt(open("mtcars.csv", "rb"), 
                  usecols=(1, 2, 3, 4, 5, 6), 
                  delimiter=",", skiprows=1)

 # b)
mpg = data[:, 0]   
cyl = data[:, 1]   
hp = data[:, 3]   
wt = data[:, 5]   

plt.scatter(hp, mpg)
plt.xlabel("Konjske snage (hp)")
plt.ylabel("Potrošnja (mpg)")
plt.title("Potrošnja automobila u odnosu na konjske snage")
plt.grid(True)
plt.show()

# c)
plt.scatter(hp, mpg, s=wt * 50, alpha=0.7)  
plt.xlabel("Konjske snage (hp)")
plt.ylabel("Potrošnja (mpg)")
plt.title("Potrošnja vs. HP (veličina = težina)")
plt.grid(True)
plt.show()

# d)
min_mpg = np.min(mpg)
max_mpg = np.max(mpg)
mean_mpg = np.mean(mpg)

print(f"Minimalna potrošnja: {min_mpg:.2f} mpg")
print(f"Maksimalna potrošnja: {max_mpg:.2f} mpg")
print(f"Srednja potrošnja: {mean_mpg:.2f} mpg")

# c)
# Filtriramo redove s 6 cilindara
mpg_6cyl = mpg[cyl == 6]

min_mpg_6 = np.min(mpg_6cyl)
max_mpg_6 = np.max(mpg_6cyl)
mean_mpg_6 = np.mean(mpg_6cyl)

printf("6 cilindara")
print(f" Minimalna potrošnja: {min_mpg_6:.2f} mpg")
print(f" Maksimalna potrošnja: {max_mpg_6:.2f} mpg")
print(f" Srednja potrošnja: {mean_mpg_6:.2f} mpg")


ZADATAK 3:
import numpy as np
import matplotlib.pyplot as plt

img = plt.imread("tiger.png")
img = img[:, :, 0].copy() 

# a)
bright_img = img + 0.3
bright_img = np.clip(bright_img, 0, 1)  

plt.imshow(bright_img, cmap="gray")
plt.title("Posvijetljena slika")
plt.show()

# b)
rotated_img = np.rot90(img, k=3)  
plt.imshow(rotated_img, cmap="gray")
plt.title("Rotacija 90°")
plt.show()

# c)
mirrored_img = np.fliplr(img) 

plt.imshow(mirrored_img, cmap="gray")
plt.title("Zrcaljena slika")
plt.show()

# d)
low_res_img = img[::10, ::10]

plt.imshow(low_res_img, cmap="gray")
plt.title("Smanjena rezolucija (x10)")
plt.show()

# e)
h, w = img.shape
new_img = np.zeros_like(img)
start = w // 4
end = w // 2

new_img[:, start:end] = img[:, start:end]

plt.imshow(new_img, cmap="gray")
plt.title("Druga četvrtina slike")
plt.show()


ZADATAK 4:
import numpy as np
import matplotlib.pyplot as plt

def generiraj_kvadratnu_sliku(vel_kvadrata, visina_kvadrata, sirina_kvadrata):
    crni = np.zeros((vel_kvadrata, vel_kvadrata), dtype=np.uint8)
    bijeli = np.ones((vel_kvadrata, vel_kvadrata), dtype=np.uint8) * 255
    
    redovi = []
    for i in range(visina_kvadrata):
        red = []
        for j in range(sirina_kvadrata):
            if (i + j) % 2 == 0:
                red.append(crni)
            else:
                red.append(bijeli)
        redovi.append(np.hstack(red))

    slika = np.vstack(redovi)  
    return slika
img = generiraj_kvadratnu_sliku(vel_kvadrata=40, visina_kvadrata=8, sirina_kvadrata=8)

plt.imshow(img, cmap='gray', vmin=0, vmax=255)
plt.title("Crno-bijeli kvadrati")
plt.show()
